schemeTemplates:
  AppScheme:
    build:
      targets:
        '${appTargetName}': all
    run:
      executable: '${appTargetName}'
  
  SharedConfigScheme:
    build:
      config: '${configName}_Debug'
    run:
      config: '${configName}_Debug'
    profile:
      config: '${configName}_Release'
    analyze:
      config: '${configName}_Release'
    archive:
      config: '${configName}_Release'
    test:
      config: Tests
      gatherCoverageData: false
      language: en
      region: en_US
      targets:
        - name: AirQualityTests


schemes:
  Development:
    templates:
      - SharedConfigScheme
      - AppScheme
    templateAttributes:
      configName: Development
      appTargetName: AirQuality
  
  Production:
    templates:
      - SharedConfigScheme
      - AppScheme
    templateAttributes:
      configName: Production
      appTargetName: AirQuality

  UITests:
    build:
      config: Tests
      targets:
        AirQuality: [test]
    test:
      config: Tests
      gatherCoverageData: false
      language: pl
      region: en_US
      targets:
        - name: AirQualityUITests
      preActions:
        - settingsTarget: AirQualityUITests
          script: |
            $PROJECT_DIR/.scripts/prepareForUITests.sh
      postActions:
        - settingsTarget: AirQualityUITests
          script: |
            $PROJECT_DIR/.scripts/cleanUpAfterUITests.sh
            $PROJECT_DIR/.scripts/copyFailedUITestsSnapshots.sh
      runPostActionsOnFailure: true

  UnitTests:
    build:
      config: Tests
      targets:
        AirQuality: [test]
    test:
      config: Tests
      gatherCoverageData: false
      language: en
      region: en_US
      targets:
        - name: AirQualityTests
      commandLineArguments:
        "-unit-tests": true
